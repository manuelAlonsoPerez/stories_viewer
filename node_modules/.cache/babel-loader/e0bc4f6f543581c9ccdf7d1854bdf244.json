{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { pie as pieBuilder } from 'd3-shape';\nimport { AnimationPropType } from '../animation';\nimport ArcSeries from '../plot/series/arc-series';\nimport LabelSeries from '../plot/series/label-series';\nimport XYPlot from '../plot/xy-plot';\nimport { DISCRETE_COLOR_RANGE } from '../theme';\nimport { MarginPropType, getRadialLayoutMargin } from '../utils/chart-utils';\nimport { getRadialDomain } from '../utils/series-utils';\nvar predefinedClassName = 'rv-radial-chart';\nvar DEFAULT_RADIUS_MARGIN = 15;\n/**\n * Create the list of wedges to render.\n * @param {Object} props\n   props.data {Object} - tree structured data (each node has a name anc an array of children)\n * @returns {Array} Array of nodes.\n */\n\nfunction getWedgesToRender(_ref) {\n  var data = _ref.data,\n      getAngle = _ref.getAngle;\n  var pie = pieBuilder().sort(null).value(getAngle);\n  var pieData = pie(data).reverse();\n  return pieData.map(function (row, index) {\n    return _extends({}, row.data, {\n      angle0: row.startAngle,\n      angle: row.endAngle,\n      radius0: row.data.innerRadius || 0,\n      radius: row.data.radius || 1,\n      color: row.data.color || index\n    });\n  });\n}\n\nfunction generateLabels(mappedData, accessors) {\n  var labelsRadiusMultiplier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1.1;\n  var getLabel = accessors.getLabel,\n      getSubLabel = accessors.getSubLabel;\n  return mappedData.reduce(function (res, row) {\n    var angle = row.angle,\n        angle0 = row.angle0,\n        radius = row.radius;\n    var centeredAngle = (angle + angle0) / 2; // unfortunate, but true fact: d3 starts its radians at 12 oclock rather than 3\n    // and move clockwise rather than counter clockwise. why why why!\n\n    var updatedAngle = -1 * centeredAngle + Math.PI / 2;\n    var newLabels = [];\n\n    if (getLabel(row)) {\n      newLabels.push({\n        angle: updatedAngle,\n        radius: radius * labelsRadiusMultiplier,\n        label: getLabel(row)\n      });\n    }\n\n    if (getSubLabel(row)) {\n      newLabels.push({\n        angle: updatedAngle,\n        radius: radius * labelsRadiusMultiplier,\n        label: getSubLabel(row),\n        style: {\n          fontSize: 10\n        },\n        yOffset: 12\n      });\n    }\n\n    return res.concat(newLabels);\n  }, []); // could add force direction here to make sure the labels dont overlap\n}\n/**\n * Get the max radius so the chart can extend to the margin.\n * @param  {Number} width - container width\n * @param  {Number} height - container height\n * @return {Number} radius\n */\n\n\nfunction getMaxRadius(width, height) {\n  return Math.min(width, height) / 2 - DEFAULT_RADIUS_MARGIN;\n}\n\nvar RadialChart = function (_Component) {\n  _inherits(RadialChart, _Component);\n\n  function RadialChart() {\n    _classCallCheck(this, RadialChart);\n\n    return _possibleConstructorReturn(this, (RadialChart.__proto__ || Object.getPrototypeOf(RadialChart)).apply(this, arguments));\n  }\n\n  _createClass(RadialChart, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          animation = _props.animation,\n          className = _props.className,\n          children = _props.children,\n          colorType = _props.colorType,\n          data = _props.data,\n          getAngle = _props.getAngle,\n          getLabel = _props.getLabel,\n          getSubLabel = _props.getSubLabel,\n          height = _props.height,\n          hideRootNode = _props.hideRootNode,\n          innerRadius = _props.innerRadius,\n          labelsAboveChildren = _props.labelsAboveChildren,\n          labelsRadiusMultiplier = _props.labelsRadiusMultiplier,\n          labelsStyle = _props.labelsStyle,\n          margin = _props.margin,\n          onMouseLeave = _props.onMouseLeave,\n          onMouseEnter = _props.onMouseEnter,\n          radius = _props.radius,\n          showLabels = _props.showLabels,\n          style = _props.style,\n          width = _props.width;\n      var mappedData = getWedgesToRender({\n        data: data,\n        height: height,\n        hideRootNode: hideRootNode,\n        width: width,\n        getAngle: getAngle\n      });\n      var radialDomain = getRadialDomain(mappedData);\n\n      var arcProps = _extends({\n        colorType: colorType\n      }, this.props, {\n        animation: animation,\n        radiusDomain: [0, radialDomain],\n        data: mappedData,\n        radiusNoFallBack: true,\n        style: style,\n        arcClassName: 'rv-radial-chart__series--pie__slice'\n      });\n\n      if (radius) {\n        arcProps.radiusDomain = [0, 1];\n        arcProps.radiusRange = [innerRadius || 0, radius];\n        arcProps.radiusType = 'linear';\n      }\n\n      var maxRadius = radius ? radius : getMaxRadius(width, height);\n      var defaultMargin = getRadialLayoutMargin(width, height, maxRadius);\n      var labels = generateLabels(mappedData, {\n        getLabel: getLabel,\n        getSubLabel: getSubLabel\n      }, labelsRadiusMultiplier);\n      return React.createElement(XYPlot, {\n        height: height,\n        width: width,\n        margin: _extends({}, margin, defaultMargin),\n        className: className + ' ' + predefinedClassName,\n        onMouseLeave: onMouseLeave,\n        onMouseEnter: onMouseEnter,\n        xDomain: [-radialDomain, radialDomain],\n        yDomain: [-radialDomain, radialDomain]\n      }, React.createElement(ArcSeries, _extends({}, arcProps, {\n        getAngle: function getAngle(d) {\n          return d.angle;\n        }\n      })), showLabels && !labelsAboveChildren && React.createElement(LabelSeries, {\n        data: labels,\n        style: labelsStyle\n      }), children, showLabels && labelsAboveChildren && React.createElement(LabelSeries, {\n        data: labels,\n        style: labelsStyle\n      }));\n    }\n  }]);\n\n  return RadialChart;\n}(Component);\n\nRadialChart.displayName = 'RadialChart';\nRadialChart.propTypes = {\n  animation: AnimationPropType,\n  className: PropTypes.string,\n  colorType: PropTypes.string,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    angle: PropTypes.number,\n    className: PropTypes.string,\n    label: PropTypes.string,\n    radius: PropTypes.number,\n    style: PropTypes.object\n  })).isRequired,\n  getAngle: PropTypes.func,\n  getAngle0: PropTypes.func,\n  getRadius: PropTypes.func,\n  getRadius0: PropTypes.func,\n  getLabel: PropTypes.func,\n  height: PropTypes.number.isRequired,\n  labelsAboveChildren: PropTypes.bool,\n  labelsStyle: PropTypes.object,\n  margin: MarginPropType,\n  onValueClick: PropTypes.func,\n  onValueMouseOver: PropTypes.func,\n  onValueMouseOut: PropTypes.func,\n  showLabels: PropTypes.bool,\n  style: PropTypes.object,\n  subLabel: PropTypes.func,\n  width: PropTypes.number.isRequired\n};\nRadialChart.defaultProps = {\n  className: '',\n  colorType: 'category',\n  colorRange: DISCRETE_COLOR_RANGE,\n  getAngle: function getAngle(d) {\n    return d.angle;\n  },\n  getAngle0: function getAngle0(d) {\n    return d.angle0;\n  },\n  getRadius: function getRadius(d) {\n    return d.radius;\n  },\n  getRadius0: function getRadius0(d) {\n    return d.radius0;\n  },\n  getLabel: function getLabel(d) {\n    return d.label;\n  },\n  getSubLabel: function getSubLabel(d) {\n    return d.subLabel;\n  }\n};\nexport default RadialChart;","map":null,"metadata":{},"sourceType":"module"}