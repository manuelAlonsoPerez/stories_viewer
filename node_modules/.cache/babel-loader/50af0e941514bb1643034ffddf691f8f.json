{"ast":null,"code":"import _classCallCheck from \"/Users/manuel/digipost/Pers_repos/stories_viewer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/manuel/digipost/Pers_repos/stories_viewer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/manuel/digipost/Pers_repos/stories_viewer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/manuel/digipost/Pers_repos/stories_viewer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/manuel/digipost/Pers_repos/stories_viewer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/manuel/digipost/Pers_repos/stories_viewer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/manuel/digipost/Pers_repos/stories_viewer/src/containers/chart-view.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PageHeader from '../components/page-header';\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, LineMarkSeries } from 'react-vis';\nimport '../styles/ChartView.css';\nimport '../../node_modules/react-vis/dist/style.css';\n\nvar ChartView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChartView, _Component);\n\n  function ChartView(props) {\n    var _this;\n\n    _classCallCheck(this, ChartView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChartView).call(this, props));\n    _this.state = {\n      width: 0,\n      height: 0,\n      stories: [],\n      data: []\n    };\n    _this.extractData = _this.extractData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setSessionStorage = _this.setSessionStorage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ChartView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var width = this.divElement.clientWidth;\n      var height = this.divElement.clientHeight;\n      var stories = this.props.location.state.stories;\n      this.setState({\n        width: width,\n        height: height,\n        stories: stories\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.stories !== this.state.stories) {\n        this.extractData(this.state.stories);\n      }\n    }\n  }, {\n    key: \"extractData\",\n    value: function extractData(array) {\n      var data = array.map(function (story, index) {\n        var x = index;\n        var y = story.score;\n        return {\n          x: x,\n          y: y\n        };\n      });\n      this.setState({\n        data: data\n      });\n    }\n  }, {\n    key: \"setSessionStorage\",\n    value: function setSessionStorage(val) {\n      sessionStorage.setItem('initiated', val);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(PageHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"chart-header-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Scores for the 10 ramdomly selected stories\"), React.createElement(\"div\", {\n        className: \"chart-container\",\n        ref: function ref(divElement) {\n          return _this2.divElement = divElement;\n        },\n        style: {\n          width: '70%',\n          marginLeft: '15%',\n          marginRight: '15%',\n          height: '70vh',\n          marginTop: '5vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        width: this.state.width,\n        height: this.state.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(VerticalGridLines, {\n        tickTotal: 10,\n        style: {\n          opacity: '0.2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(HorizontalGridLines, {\n        tickTotal: 10,\n        style: {\n          opacity: '0.2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        tickTotal: 10,\n        title: \"story\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        tickTotal: 10,\n        title: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(LineMarkSeries, {\n        className: \"linemark-series-example-2\",\n        curve: 'curveMonotoneX',\n        data: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(Link, {\n        className: \"chart-buttons-container\",\n        to: \"/\",\n        onClick: function onClick() {\n          return _this2.setSessionStorage(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button-back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"< Back to stories\"))));\n    }\n  }]);\n\n  return ChartView;\n}(Component);\n\nexport { ChartView as default };","map":{"version":3,"sources":["/Users/manuel/digipost/Pers_repos/stories_viewer/src/containers/chart-view.js"],"names":["React","Component","Link","PageHeader","XYPlot","XAxis","YAxis","VerticalGridLines","HorizontalGridLines","LineMarkSeries","ChartView","props","state","width","height","stories","data","extractData","bind","setSessionStorage","divElement","clientWidth","clientHeight","location","setState","prevProps","prevState","array","map","story","index","x","y","score","val","sessionStorage","setItem","marginLeft","marginRight","marginTop","opacity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PageHeader from '../components/page-header';\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, LineMarkSeries } from 'react-vis';\n\nimport '../styles/ChartView.css';\nimport '../../node_modules/react-vis/dist/style.css';\n\nexport default class ChartView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: 0,\n            height: 0,\n            stories: [],\n            data: []\n        };\n        this.extractData = this.extractData.bind(this);\n        this.setSessionStorage = this.setSessionStorage.bind(this);\n    }\n\n    componentDidMount() {\n        const width = this.divElement.clientWidth;\n        const height = this.divElement.clientHeight;\n        const { stories } = this.props.location.state;\n        this.setState({ width, height, stories });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.stories !== this.state.stories) {\n            this.extractData(this.state.stories);\n        }\n\n    }\n\n    extractData(array) {\n        let data = array.map((story, index) => {\n            const x = index;\n            const y = story.score;\n            return { x, y };\n        });\n        this.setState({ data });\n    }\n\n    setSessionStorage(val) {\n        sessionStorage.setItem('initiated', val);\n    }\n\n    render() {\n        return (\n            <div className='main-container'>\n                <PageHeader />\n                <div className='chart-header-title'>Scores for the 10 ramdomly selected stories</div>\n                <div className='chart-container'\n                    ref={(divElement) => this.divElement = divElement}\n                    style={{ width: '70%', marginLeft: '15%', marginRight: '15%', height: '70vh', marginTop: '5vh' }}>\n                    <XYPlot\n                        width={this.state.width}\n                        height={this.state.height}\n                    >\n                        <VerticalGridLines tickTotal={10} style={{ opacity: '0.2' }} />\n                        <HorizontalGridLines tickTotal={10} style={{ opacity: '0.2' }} />\n                        <XAxis tickTotal={10} title='story' />\n                        <YAxis tickTotal={10} title='score' />\n                        <LineMarkSeries\n                            className='linemark-series-example-2'\n                            curve={'curveMonotoneX'}\n                            data={this.state.data}\n                        />\n                    </XYPlot>\n\n                    <Link\n                        className='chart-buttons-container'\n                        to='/'\n                        onClick={() => this.setSessionStorage(true)}\n                    >\n                        <button className='button-back'>\n                            &#60; Back to stories\n                    </button>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}