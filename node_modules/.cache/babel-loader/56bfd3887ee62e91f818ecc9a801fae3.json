{"ast":null,"code":"import axios from 'axios';\nimport convertTime from '../functions/convert-time';\nexport var COMMENTS_HAVE_ERROR = 'COMMENTS_HAVE_ERROR';\nexport var COMMENTS_ARE_LOADING = 'COMMENTS_ARE_LOADING';\nexport var COMMENTS_FETCH_DATA_SUCCESS = 'COMMENTS_FETCH_DATA_SUCCESS';\nexport var COMMENTS_FETCH_FULL_DATA_SUCCESS = 'COMMENTS_FETCH_FULL_DATA_SUCCESS';\nexport function commentsHaveError(bool) {\n  return {\n    type: COMMENTS_HAVE_ERROR,\n    hasError: bool\n  };\n}\nexport function commentsAreLoading(bool) {\n  return {\n    type: COMMENTS_ARE_LOADING,\n    isLoading: bool\n  };\n}\nexport function commentsFetchDataSuccess(comments) {\n  return {\n    type: COMMENTS_FETCH_DATA_SUCCESS,\n    payload: comments\n  };\n}\nexport function commentsFetchFullDataSuccess(fullComments) {\n  return {\n    type: COMMENTS_FETCH_FULL_DATA_SUCCESS,\n    payload: fullComments\n  };\n}\nexport function fetchFirstComments(id) {\n  var rootUrl = 'https://hacker-news.firebaseio.com/v0/';\n  var fullUrl = \"\".concat(rootUrl, \"item/\").concat(id, \".json?print=pretty\");\n  var firstComments = [];\n  return function (dispatch) {\n    dispatch(commentsAreLoading(true));\n    axios.get(fullUrl).then(function (response) {\n      if (response.status !== 200) {\n        throw Error(response.statusText);\n      }\n\n      return response;\n    }).then(function (response) {\n      firstComments = response.data.kids;\n\n      if (firstComments.length > 10) {\n        firstComments = firstComments.slice(0, 10);\n      }\n\n      dispatch(commentsFetchDataSuccess(firstComments));\n    }).catch(function () {\n      return dispatch(commentsHaveError(true));\n    });\n  };\n}\nexport function fetchDataComments(comments) {\n  var rootUrl = 'https://hacker-news.firebaseio.com/v0/';\n  var commentsData = [];\n  return function (dispatch) {\n    dispatch(commentsAreLoading(true));\n    comments.map(function (comment, index) {\n      var id = comment;\n      var fullCommentUrl = \"\".concat(rootUrl, \"item/\").concat(id, \".json?print=pretty\");\n      axios.get(fullCommentUrl).then(function (response) {\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        return response;\n      }).then(function (response) {\n        var id = response.data.id;\n        var text = response.data.text;\n        var date = convertTime(response.data.time);\n        var author = response.data.by;\n        var fullAuthorUrl = \"\".concat(rootUrl, \"user/\").concat(author, \".json?print=pretty\");\n        axios.get(fullAuthorUrl).then(function (response) {\n          var authorComments = response.data.submitted.length;\n          return authorComments;\n        }).then(function (authorComments) {\n          commentsData.push({\n            id: id,\n            text: text,\n            date: date,\n            author: author,\n            authorComments: authorComments\n          });\n        });\n      }).catch(function () {\n        return dispatch(commentsHaveError(true));\n      });\n      return comment;\n    });\n    setTimeout(function () {\n      dispatch(commentsFetchFullDataSuccess(commentsData));\n      dispatch(commentsAreLoading(false));\n    }, 3000);\n  };\n}","map":{"version":3,"sources":["/Users/manuel/digipost/Pers_repos/stories_viewer/src/actions/comments.js"],"names":["axios","convertTime","COMMENTS_HAVE_ERROR","COMMENTS_ARE_LOADING","COMMENTS_FETCH_DATA_SUCCESS","COMMENTS_FETCH_FULL_DATA_SUCCESS","commentsHaveError","bool","type","hasError","commentsAreLoading","isLoading","commentsFetchDataSuccess","comments","payload","commentsFetchFullDataSuccess","fullComments","fetchFirstComments","id","rootUrl","fullUrl","firstComments","dispatch","get","then","response","status","Error","statusText","data","kids","length","slice","catch","fetchDataComments","commentsData","map","comment","index","fullCommentUrl","text","date","time","author","by","fullAuthorUrl","authorComments","submitted","push","setTimeout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport convertTime from '../functions/convert-time';\n\nexport const COMMENTS_HAVE_ERROR = 'COMMENTS_HAVE_ERROR';\nexport const COMMENTS_ARE_LOADING = 'COMMENTS_ARE_LOADING';\nexport const COMMENTS_FETCH_DATA_SUCCESS = 'COMMENTS_FETCH_DATA_SUCCESS';\nexport const COMMENTS_FETCH_FULL_DATA_SUCCESS = 'COMMENTS_FETCH_FULL_DATA_SUCCESS';\n\nexport function commentsHaveError(bool) {\n    return {\n        type: COMMENTS_HAVE_ERROR,\n        hasError: bool\n    };\n}\n\nexport function commentsAreLoading(bool) {\n    return {\n        type: COMMENTS_ARE_LOADING,\n        isLoading: bool\n    };\n}\n\nexport function commentsFetchDataSuccess(comments) {\n    return {\n        type: COMMENTS_FETCH_DATA_SUCCESS,\n        payload: comments\n    };\n}\n\nexport function commentsFetchFullDataSuccess(fullComments) {\n    return {\n        type: COMMENTS_FETCH_FULL_DATA_SUCCESS,\n        payload: fullComments\n    };\n}\n\nexport function fetchFirstComments(id) {\n    let rootUrl = 'https://hacker-news.firebaseio.com/v0/';\n    let fullUrl = `${rootUrl}item/${id}.json?print=pretty`;\n    let firstComments = [];\n\n    return (dispatch) => {\n        dispatch(commentsAreLoading(true));\n\n        axios.get(fullUrl)\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw Error(response.statusText);\n                }\n                return response;\n            })\n            .then((response) => {\n                firstComments = response.data.kids;\n                if (firstComments.length > 10) {\n                    firstComments = firstComments.slice(0, 10);\n                }\n                dispatch(commentsFetchDataSuccess(firstComments));\n            })\n            .catch(() => dispatch(commentsHaveError(true)));\n    };\n}\n\nexport function fetchDataComments(comments) {\n    let rootUrl = 'https://hacker-news.firebaseio.com/v0/';\n    let commentsData = [];\n\n    return (dispatch) => {\n        dispatch(commentsAreLoading(true));\n\n        comments.map((comment, index) => {\n            let id = comment;\n            let fullCommentUrl = `${rootUrl}item/${id}.json?print=pretty`;\n            axios.get(fullCommentUrl)\n                .then((response) => {\n                    if (response.status !== 200) {\n                        throw Error(response.statusText);\n                    }\n                    return response;\n                })\n                .then((response) => {\n                    let id = response.data.id;\n                    let text = response.data.text;\n                    let date = convertTime(response.data.time);\n                    let author = response.data.by;\n                    let fullAuthorUrl = `${rootUrl}user/${author}.json?print=pretty`;\n                    axios.get(fullAuthorUrl)\n                        .then((response) => {\n                            let authorComments = response.data.submitted.length;\n                            return authorComments;\n                        }).then((authorComments) => {\n                            commentsData.push({ id, text, date, author, authorComments });\n                        })\n                })\n                .catch(() => dispatch(commentsHaveError(true)));\n            return comment;\n        });\n\n        setTimeout(() => {\n            dispatch(commentsFetchFullDataSuccess(commentsData));\n            dispatch(commentsAreLoading(false));\n        }, 3000);\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}