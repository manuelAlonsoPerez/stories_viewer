{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { sankey, sankeyLinkHorizontal, sankeyLeft, sankeyRight, sankeyCenter, sankeyJustify } from 'd3-sankey';\nimport XYPlot from '../plot/xy-plot';\nimport { MarginPropType, getInnerDimensions } from '../utils/chart-utils';\nimport VerticalRectSeries from '../plot/series/vertical-rect-series';\nimport LabelSeries from '../plot/series/label-series';\nimport Voronoi from '../plot/voronoi';\nimport { DISCRETE_COLOR_RANGE } from '../theme';\nimport SankeyLink from './sankey-link';\n\nvar NOOP = function NOOP(f) {\n  return f;\n};\n\nvar ALIGNMENTS = {\n  justify: sankeyJustify,\n  center: sankeyCenter,\n  left: sankeyLeft,\n  right: sankeyRight\n};\nvar DEFAULT_MARGINS = {\n  top: 20,\n  left: 20,\n  right: 20,\n  bottom: 20\n};\n\nvar Sankey = function (_Component) {\n  _inherits(Sankey, _Component);\n\n  function Sankey() {\n    _classCallCheck(this, Sankey);\n\n    return _possibleConstructorReturn(this, (Sankey.__proto__ || Object.getPrototypeOf(Sankey)).apply(this, arguments));\n  }\n\n  _createClass(Sankey, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          align = _props.align,\n          animation = _props.animation,\n          children = _props.children,\n          className = _props.className,\n          hasVoronoi = _props.hasVoronoi,\n          height = _props.height,\n          hideLabels = _props.hideLabels,\n          layout = _props.layout,\n          links = _props.links,\n          linkOpacity = _props.linkOpacity,\n          margin = _props.margin,\n          nodePadding = _props.nodePadding,\n          nodes = _props.nodes,\n          nodeWidth = _props.nodeWidth,\n          onValueClick = _props.onValueClick,\n          onValueMouseOver = _props.onValueMouseOver,\n          onValueMouseOut = _props.onValueMouseOut,\n          onLinkClick = _props.onLinkClick,\n          onLinkMouseOver = _props.onLinkMouseOver,\n          onLinkMouseOut = _props.onLinkMouseOut,\n          style = _props.style,\n          width = _props.width;\n      var nodesCopy = [].concat(_toConsumableArray(new Array(nodes.length))).map(function (e, i) {\n        return _extends({}, nodes[i]);\n      });\n      var linksCopy = [].concat(_toConsumableArray(new Array(links.length))).map(function (e, i) {\n        return _extends({}, links[i]);\n      });\n\n      var _getInnerDimensions = getInnerDimensions({\n        margin: margin,\n        height: height,\n        width: width\n      }, DEFAULT_MARGINS),\n          marginLeft = _getInnerDimensions.marginLeft,\n          marginTop = _getInnerDimensions.marginTop,\n          marginRight = _getInnerDimensions.marginRight,\n          marginBottom = _getInnerDimensions.marginBottom;\n\n      var sankeyInstance = sankey().extent([[marginLeft, marginTop], [width - marginRight, height - marginBottom - marginTop]]).nodeWidth(nodeWidth).nodePadding(nodePadding).nodes(nodesCopy).links(linksCopy).nodeAlign(ALIGNMENTS[align]).iterations(layout);\n      sankeyInstance(nodesCopy);\n      var nWidth = sankeyInstance.nodeWidth();\n      var path = sankeyLinkHorizontal();\n      return React.createElement(XYPlot, _extends({}, this.props, {\n        yType: 'literal',\n        className: 'rv-sankey ' + className\n      }), linksCopy.map(function (link, i) {\n        return React.createElement(SankeyLink, {\n          style: style.links,\n          data: path(link),\n          opacity: link.opacity || linkOpacity,\n          color: link.color,\n          onLinkClick: onLinkClick,\n          onLinkMouseOver: onLinkMouseOver,\n          onLinkMouseOut: onLinkMouseOut,\n          strokeWidth: Math.max(link.width, 1),\n          node: link,\n          nWidth: nWidth,\n          key: 'link-' + i\n        });\n      }), React.createElement(VerticalRectSeries, {\n        animation: animation,\n        className: className + ' rv-sankey__node',\n        data: nodesCopy.map(function (node) {\n          return _extends({}, node, {\n            y: node.y1 - marginTop,\n            y0: node.y0 - marginTop,\n            x: node.x1,\n            x0: node.x0,\n            color: node.color || DISCRETE_COLOR_RANGE[0],\n            sourceLinks: null,\n            targetLinks: null\n          });\n        }),\n        style: style.rects,\n        onValueClick: onValueClick,\n        onValueMouseOver: onValueMouseOver,\n        onValueMouseOut: onValueMouseOut,\n        colorType: 'literal'\n      }), !hideLabels && React.createElement(LabelSeries, {\n        animation: animation,\n        className: className,\n        data: nodesCopy.map(function (node) {\n          return {\n            x: node.x0 + (node.x0 < width / 2 ? nWidth + 10 : -10),\n            y: (node.y0 + node.y1) / 2 - marginTop,\n            label: node.name,\n            style: _extends({\n              dy: '-.5em'\n            }, style.labels)\n          };\n        })\n      }), hasVoronoi && React.createElement(Voronoi, {\n        className: 'rv-sankey__voronoi',\n        extent: [[-marginLeft, -marginTop], [width + marginRight, height + marginBottom]],\n        nodes: nodesCopy,\n        onClick: onValueClick,\n        onHover: onValueMouseOver,\n        onBlur: onValueMouseOut,\n        x: function x(d) {\n          return d.x0 + (d.x1 - d.x0) / 2;\n        },\n        y: function y(d) {\n          return d.y0 + (d.y1 - d.y0) / 2;\n        }\n      }), children);\n    }\n  }]);\n\n  return Sankey;\n}(Component);\n\nSankey.defaultProps = {\n  align: 'justify',\n  className: '',\n  hasVoronoi: false,\n  hideLabels: false,\n  layout: 50,\n  margin: DEFAULT_MARGINS,\n  nodePadding: 10,\n  nodeWidth: 10,\n  onValueMouseOver: NOOP,\n  onValueClick: NOOP,\n  onValueMouseOut: NOOP,\n  onLinkClick: NOOP,\n  onLinkMouseOver: NOOP,\n  onLinkMouseOut: NOOP,\n  style: {\n    links: {},\n    rects: {},\n    labels: {}\n  }\n};\nSankey.propTypes = {\n  align: PropTypes.oneOf(['justify', 'left', 'right', 'center']),\n  className: PropTypes.string,\n  hasVoronoi: PropTypes.bool,\n  height: PropTypes.number.isRequired,\n  hideLabels: PropTypes.bool,\n  layout: PropTypes.number,\n  links: PropTypes.arrayOf(PropTypes.shape({\n    source: PropTypes.oneOfType([PropTypes.number, PropTypes.object]).isRequired,\n    target: PropTypes.oneOfType([PropTypes.number, PropTypes.object]).isRequired\n  })).isRequired,\n  margin: MarginPropType,\n  nodePadding: PropTypes.number,\n  nodes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  nodeWidth: PropTypes.number,\n  onValueMouseOver: PropTypes.func,\n  onValueClick: PropTypes.func,\n  onValueMouseOut: PropTypes.func,\n  onLinkClick: PropTypes.func,\n  onLinkMouseOver: PropTypes.func,\n  onLinkMouseOut: PropTypes.func,\n  style: PropTypes.shape({\n    links: PropTypes.object,\n    rects: PropTypes.object,\n    labels: PropTypes.object\n  }),\n  width: PropTypes.number.isRequired\n};\nexport default Sankey;","map":null,"metadata":{},"sourceType":"module"}